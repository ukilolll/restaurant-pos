/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.LinkedHashMap;

import java.awt.Graphics2D;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class MenuConfig extends javax.swing.JPanel {

    /**
     * Creates new form MenuConfig
     */
    public MenuConfig() {
        initComponents();
        setCategory();
        createDeleteMenuTable(Menu.menuInfo);
    }

    private void setCategory(){
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement(Index.MAIN_DISH);
        model.addElement(Index.DESSERT);
        model.addElement(Index.DRINK);
        jCategory.setModel(model);
    }
    private void resizeImage(File inputFile, File outputFile, int width, int height,String format) throws IOException {
        BufferedImage inputImage =ImageIO.read(inputFile);
        BufferedImage outputImage = new BufferedImage(width,height,inputImage.getType());
        
        Graphics2D g2d = outputImage.createGraphics();
        g2d.drawImage(inputImage,0,0,width,height,null);
        g2d.dispose();
        ImageIO.write(outputImage,format,outputFile);
        System.out.println("File copied ");
    }

    public void iHaveNoIdelToNameThisMethod(){
        createDeleteMenuTable(Index.db.geteMenu());
        Menu.clearMenuGrid();
        Index.haveConfigMenu= true;//set true for uncache
    }

    private DefaultTableModel model;
    private Object[] defaultModel = {"name", "cartegory", "price"};

    private void createDeleteMenuTable(LinkedHashMap<String,Object[]> menu){
        model = new DefaultTableModel(defaultModel, 0);
        model.setRowCount(0);

        for (String name : menu.keySet()) {
            Object[] info= menu.get(name);
            //set data in table
            model.addRow(new Object[]{name,info[1],info[0]});
        }
        jTableMenu.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton29 = new javax.swing.JButton();
        jButtonAddMenu = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMenu = new javax.swing.JTable();
        jCategory = new javax.swing.JComboBox<>();
        jButton25 = new javax.swing.JButton();
        jButtonUpload = new javax.swing.JButton();

        setBackground(new java.awt.Color(235, 235, 235));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton29.setBackground(new java.awt.Color(244, 103, 0));
        jButton29.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jButton29.setForeground(new java.awt.Color(255, 255, 255));
        jButton29.setText("Name");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 200, 60));

        jButtonAddMenu.setBackground(new java.awt.Color(244, 103, 0));
        jButtonAddMenu.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jButtonAddMenu.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddMenu.setText("Add Menu");
        jButtonAddMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddMenuActionPerformed(evt);
            }
        });
        add(jButtonAddMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 580, 220, 80));

        jButton27.setBackground(new java.awt.Color(244, 103, 0));
        jButton27.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jButton27.setForeground(new java.awt.Color(255, 255, 255));
        jButton27.setText("Price");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 200, 60));

        jButtonDelete.setBackground(new java.awt.Color(244, 103, 0));
        jButtonDelete.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText(" Delete Menu");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 580, 220, 80));

        jButton24.setBackground(new java.awt.Color(244, 103, 0));
        jButton24.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jButton24.setForeground(new java.awt.Color(255, 255, 255));
        jButton24.setText("Image");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, 200, 60));

        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });
        add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 270, 60));

        jTextFieldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPriceActionPerformed(evt);
            }
        });
        jTextFieldPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPriceKeyTyped(evt);
            }
        });
        add(jTextFieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 270, 60));

        jTableMenu.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jTableMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "category", "name", "price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableMenu);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 700, -1));

        jCategory.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Main course", "Dessert", "Drink" }));
        jCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCategoryActionPerformed(evt);
            }
        });
        add(jCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, 270, 60));

        jButton25.setBackground(new java.awt.Color(244, 103, 0));
        jButton25.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jButton25.setForeground(new java.awt.Color(255, 255, 255));
        jButton25.setText("Category");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 200, 60));

        jButtonUpload.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });
        add(jButtonUpload, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 450, 270, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButtonAddMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMenuActionPerformed
        String name =jTextFieldName.getText().trim();

        if(name.equals("")|| jTextFieldPrice.getText().equals("")){
            JOptionPane.showMessageDialog(null, "please fill name and price","" , JOptionPane.ERROR_MESSAGE);
            return;
        }
        System.out.println("insert ");
        String car = ((String)jCategory.getSelectedItem());
        int price = Integer.valueOf(jTextFieldPrice.getText());

        String imagePath;
        if(file != null){
            //copy ,resize and store new image file in folder
            String filePath  = System.getProperty("user.dir")+"/DB/menuImages/";
            String fileName = LocalDateTime.now().toString().replace(":", "-")+"."+format;
            System.out.println(fileName);
            File newFile = new File(filePath, fileName);
            try {
                resizeImage(file,newFile,280, 230,format);
                file = null;
            } catch (IOException e) {
                e.printStackTrace();
            }

            imagePath = "/DB/menuImages/"+fileName;
        }else{
            imagePath = null;
        }
        //store data in sql and new query
        try {
            Index.db.addMenu(name,car,price,imagePath);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "This name is already taken", "", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        //reset text setthing 
        jButtonUpload.setText("upload");
        jTextFieldName.setText("");
        jTextFieldPrice.setText("");
        iHaveNoIdelToNameThisMethod();
    }//GEN-LAST:event_jButtonAddMenuActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int index = jTableMenu.getSelectedRow();
        String name = (String)jTableMenu.getValueAt(index, 0);
        //delete image file
        String imagePath = System.getProperty("user.dir") +Menu.menuInfo.get(name)[2];
        new File(imagePath).delete();
        //delete data in sql and new query
        Index.db.deleteMenu(name);

        iHaveNoIdelToNameThisMethod();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jTextFieldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPriceActionPerformed

    private void jCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCategoryActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton25ActionPerformed

    private boolean validFormat(File file){
        String[] ImageFormat = {"jpg","jpeg","png","jfif","svg"};
        //split use regex not string (why the fuck java use regex)
        String[] fileName = file.getAbsolutePath().split("\\.");
        String fileFormat = fileName[fileName.length -1].toLowerCase();

        for (String  IF : ImageFormat) {
            if(IF.equals(fileFormat)){
                format = fileFormat;
                jButtonUpload.setText(file.getName());
                return true;
            }
        }
        return false;
    }

    private File file;
    private String format;
    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        if(f == null){return;}
        if(validFormat(f)){
            file = new File(f.getAbsolutePath());
            System.out.println(file.getAbsolutePath().toString());
            return;
        }

        JOptionPane.showMessageDialog(null, "this file isn't valid image format", "", JOptionPane.ERROR_MESSAGE);


    }//GEN-LAST:event_jButtonUploadActionPerformed

    private void jTextFieldPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPriceKeyTyped
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPriceKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButtonAddMenu;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JComboBox<String> jCategory;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTableMenu;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPrice;
    // End of variables declaration//GEN-END:variables
}
